/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.AidDistribution;

import AidRequest.Resource;
import DataConfiguration.Enterprise;
import DataConfiguration.Network;
import DataConfiguration.Organization;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.admin.AidCoordinator;
import model.organization.AidReceipent.AidRequest;
import model.organization.AidReceipent.AidRequestDirectory;


/**
 *
 * @author sahar
 */
public class DistributionResourceJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    Network network;
    AidCoordinator coord;
    AidRequestDirectory requestList;
     private DefaultTableModel tableModel;
    /**
     * Creates new form DistributionResourceJPanel
     * @param userProcessContainer
     */
    public DistributionResourceJPanel(JPanel userProcessContainer, Network network,AidCoordinator coord) {
        initComponents();
        this.tableModel = (DefaultTableModel) tblAidRequest.getModel();
        this.userProcessContainer=userProcessContainer;
        this.network = network;
        this.coord = coord;
        this.requestList = network.getEnterpriseDirectory().findEnterprise("Public Service Enterprise").getOrganizationDirectory().findOrganization("Receipient Registration").getAidRequestDirectory();
        
        
        // Make available resources text field non-editable
            txtAvailableRes.setEditable(false);

            // Add table selection listener
            tblAidRequest.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent event) {
                    if (!event.getValueIsAdjusting()) {
                        int selectedRow = tblAidRequest.getSelectedRow();
                        if (selectedRow >= 0) {
                            txtName.setText(tblAidRequest.getValueAt(selectedRow, 0).toString());
                            txtAmount.setText(tblAidRequest.getValueAt(selectedRow, 1).toString());
                            txtReason.setText(tblAidRequest.getValueAt(selectedRow, 2).toString());
                        }
                    }
                }
            });
        populateTable();
        updateAvailableResources();
    }
     
      private void populateTable() {
        tableModel.setRowCount(0);
        
        for (AidRequest request : requestList.getAidRequestList()) {
            if (request.getStatus() == AidRequest.RequestStatus.PENDING) {
                tableModel.addRow(new Object[]{
                    request.getRequestorName(),
                    request.getAmountNeeded(),
                    request.getReason()
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAidRequest = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtReason = new javax.swing.JTextField();
        btnAcceptRequest = new javax.swing.JButton();
        btnDenyRequest = new javax.swing.JButton();
        lblAvailableRes = new javax.swing.JLabel();
        txtAvailableRes = new javax.swing.JTextField();

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Aid Distribution Dashboard");

        tblAidRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Recipient Name", "Amount", "Reason"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblAidRequest);

        jLabel1.setText("Name");

        jLabel2.setText("Amount");

        jLabel3.setText("Reason");

        btnAcceptRequest.setText("Accept Request");
        btnAcceptRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptRequestActionPerformed(evt);
            }
        });

        btnDenyRequest.setText("Deny Request");
        btnDenyRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDenyRequestActionPerformed(evt);
            }
        });

        lblAvailableRes.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblAvailableRes.setText("Available Resources");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDenyRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAcceptRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(164, 164, 164))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtName)
                                            .addGap(30, 30, 30)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblAvailableRes)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtAvailableRes, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(txtReason, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(29, 29, 29))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAvailableRes)
                    .addComponent(txtAvailableRes, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReason, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDenyRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAcceptRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptRequestActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAidRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a request");
            return;
        }
        
        String requestorName = txtName.getText();
        String amountText = txtAmount.getText().trim();
        
        if (amountText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter an amount");
            return;
        }

        double amount;
        try {
            amount = Double.parseDouble(amountText);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid number for amount");
            return;
        }
        
         AidRequest selectedRequest = findRequest(requestorName, amount);
            if (selectedRequest != null) {
                // Find the Community Support Enterprise and Donation Management org
                Enterprise communityEnterprise = null;
                Organization donationOrg = null;

                for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                    if (enterprise.getName().equals("Community Support Enterprise")) {
                        communityEnterprise = enterprise;
                        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                            if (org.getName().equals("Donation Management")) {
                                donationOrg = org;
                                break;
                            }
                        }
                        break;
                    }
                }

                if (donationOrg == null) {
                    JOptionPane.showMessageDialog(this, "Error: Donation organization not found");
                    return;
                }

                Resource resource = donationOrg.getResource();
                if (resource == null) {
                    JOptionPane.showMessageDialog(this, "Error: Resource not found");
                    return;
                }

                if (resource.allocateFunds(amount)) {
                    selectedRequest.setStatus(AidRequest.RequestStatus.APPROVED);
                    JOptionPane.showMessageDialog(this, "Request approved successfully");
                    refreshPanel();
                } else {
                    JOptionPane.showMessageDialog(this, "Insufficient funds");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Request not found");
            }
        
    }//GEN-LAST:event_btnAcceptRequestActionPerformed

    private void btnDenyRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDenyRequestActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = tblAidRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a request");
            return;
        }
        
        String requestorName = txtName.getText();
        double amount = Double.parseDouble(txtAmount.getText());
        
        AidRequest selectedRequest = findRequest(requestorName, amount);
        if (selectedRequest != null) {
            selectedRequest.setStatus(AidRequest.RequestStatus.REJECTED);
            JOptionPane.showMessageDialog(this, "Request rejected");
            refreshPanel();
        }
    }//GEN-LAST:event_btnDenyRequestActionPerformed
    
    private AidRequest findRequest(String requestorName, double amount) {
        return requestList.getAidRequestList().stream()
            .filter(r -> r.getRequestorName().equals(requestorName) 
                && r.getAmountNeeded() == amount 
                && r.getStatus() == AidRequest.RequestStatus.PENDING)
            .findFirst()
            .orElse(null);
    }
    
//    private void updateAvailableResources() {
//        Resource resource = network.getEnterpriseDirectory()
//            .findEnterprise("Public Service Enterprise")
//            .getOrganizationDirectory()
//            .findOrganization("Donor Management")
//            .getDonationDirectory()
//            .getResource();
//            
//        txtAvailableRes.setText(String.format("$%.2f", resource.getAvailableFunds()));
//    }
    private void updateAvailableResources() {
        try {
            Enterprise communityEnterprise = null;
            Organization donationOrg = null;
            System.out.println("Number of enterprises: " + network.getEnterpriseDirectory().getEnterpriseList().size());
            // Find the Community Support Enterprise and Donation Management org
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise.getName().equals("Community Support Enterprise")) {
                    communityEnterprise = enterprise;
                    for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (org.getName().equals("Donation Management")) {
                            donationOrg = org;
                            break;
                        }
                    }
                    break;
                }
            }

            if (donationOrg == null) {
                txtAvailableRes.setText("$0.00");
                return;
            }

            Resource resource = donationOrg.getResource();
            if (resource == null) {
                txtAvailableRes.setText("$0.00");
                return;
            }

            txtAvailableRes.setText(String.format("$%.2f", resource.getAvailableFunds()));
        } catch (Exception e) {
            txtAvailableRes.setText("$0.00");
            System.err.println("Error updating available resources: " + e.getMessage());
            e.printStackTrace();
        }
    }
    
    private void refreshPanel() {
        populateTable();
        updateAvailableResources();
        txtName.setText("");
        txtAmount.setText("");
        txtReason.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptRequest;
    private javax.swing.JButton btnDenyRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAvailableRes;
    private javax.swing.JTable tblAidRequest;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtAvailableRes;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtReason;
    // End of variables declaration//GEN-END:variables
}
